{"ast":null,"code":"import { Pipe, Injectable, NgModule } from '@angular/core';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nclass FilterPipe {\n  /**\n   * @param {?} value\n   * @param {?} key\n   * @return {?}\n   */\n  static isFoundOnWalking(value, key) {\n    let\n    /** @type {?} */\n    walker = value;\n    let\n    /** @type {?} */\n    found = false;\n\n    do {\n      if (walker.hasOwnProperty(key) || Object.getOwnPropertyDescriptor(walker, key)) {\n        found = true;\n        break;\n      }\n    } while (walker = Object.getPrototypeOf(walker));\n\n    return found;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  static isNumber(value) {\n    return !isNaN(parseInt(value, 10)) && isFinite(value);\n  }\n  /**\n   * Checks function's value if type is function otherwise same value\n   * @param {?} value\n   * @return {?}\n   */\n\n\n  static getValue(value) {\n    return typeof value === 'function' ? value() : value;\n  }\n  /**\n   * @param {?} filter\n   * @return {?}\n   */\n\n\n  filterByString(filter) {\n    if (filter) {\n      filter = filter.toLowerCase();\n    }\n\n    return value => !filter || (value ? ('' + value).toLowerCase().indexOf(filter) !== -1 : false);\n  }\n  /**\n   * @param {?} filter\n   * @return {?}\n   */\n\n\n  filterByBoolean(filter) {\n    return value => Boolean(value) === filter;\n  }\n  /**\n   * @param {?} filter\n   * @return {?}\n   */\n\n\n  filterByObject(filter) {\n    return value => {\n      for (const\n      /** @type {?} */\n      key in filter) {\n        if (key === '$or') {\n          if (!this.filterByOr(filter.$or)(FilterPipe.getValue(value))) {\n            return false;\n          }\n\n          continue;\n        }\n\n        if (!value || !FilterPipe.isFoundOnWalking(value, key)) {\n          return false;\n        }\n\n        if (!this.isMatching(filter[key], FilterPipe.getValue(value[key]))) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n  }\n  /**\n   * @param {?} filter\n   * @param {?} val\n   * @return {?}\n   */\n\n\n  isMatching(filter, val) {\n    switch (typeof filter) {\n      case 'boolean':\n        return this.filterByBoolean(filter)(val);\n\n      case 'string':\n        return this.filterByString(filter)(val);\n\n      case 'object':\n        return this.filterByObject(filter)(val);\n    }\n\n    return this.filterDefault(filter)(val);\n  }\n  /**\n   * Filter value by $or\n   * @param {?} filter\n   * @return {?}\n   */\n\n\n  filterByOr(filter) {\n    return value => {\n      const\n      /** @type {?} */\n      length = filter.length;\n\n      const\n      /** @type {?} */\n      arrayComparison = i => value.indexOf(filter[i]) !== -1;\n\n      const\n      /** @type {?} */\n      otherComparison = i => this.isMatching(filter[i], value);\n\n      const\n      /** @type {?} */\n      comparison = Array.isArray(value) ? arrayComparison : otherComparison;\n\n      for (let\n      /** @type {?} */\n      i = 0; i < length; i++) {\n        if (comparison(i)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n  /**\n   * Default filterDefault function\n   * @param {?} filter\n   * @return {?}\n   */\n\n\n  filterDefault(filter) {\n    return value => filter === undefined || filter == value;\n  }\n  /**\n   * @param {?} array\n   * @param {?} filter\n   * @return {?}\n   */\n\n\n  transform(array, filter) {\n    if (!array) {\n      return array;\n    }\n\n    switch (typeof filter) {\n      case 'boolean':\n        return array.filter(this.filterByBoolean(filter));\n\n      case 'string':\n        if (FilterPipe.isNumber(filter)) {\n          return array.filter(this.filterDefault(filter));\n        }\n\n        return array.filter(this.filterByString(filter));\n\n      case 'object':\n        return array.filter(this.filterByObject(filter));\n\n      case 'function':\n        return array.filter(filter);\n    }\n\n    return array.filter(this.filterDefault(filter));\n  }\n\n}\n\nFilterPipe.decorators = [{\n  type: Pipe,\n  args: [{\n    name: 'filterBy',\n    pure: false\n  }]\n}, {\n  type: Injectable\n}];\n/** @nocollapse */\n\nFilterPipe.ctorParameters = () => [];\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nclass FilterPipeModule {}\n\nFilterPipeModule.decorators = [{\n  type: NgModule,\n  args: [{\n    declarations: [FilterPipe],\n    providers: [FilterPipe],\n    exports: [FilterPipe]\n  }]\n}];\n/** @nocollapse */\n\nFilterPipeModule.ctorParameters = () => [];\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FilterPipeModule, FilterPipe };","map":{"version":3,"names":["Pipe","Injectable","NgModule","FilterPipe","isFoundOnWalking","value","key","walker","found","hasOwnProperty","Object","getOwnPropertyDescriptor","getPrototypeOf","isNumber","isNaN","parseInt","isFinite","getValue","filterByString","filter","toLowerCase","indexOf","filterByBoolean","Boolean","filterByObject","filterByOr","$or","isMatching","val","filterDefault","length","arrayComparison","i","otherComparison","comparison","Array","isArray","undefined","transform","array","decorators","type","args","name","pure","ctorParameters","FilterPipeModule","declarations","providers","exports"],"sources":["C:/Users/Adam/Desktop/angular formation harington/FormationHarington/node_modules/ngx-filter-pipe/esm2015/ngx-filter-pipe.js"],"sourcesContent":["import { Pipe, Injectable, NgModule } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass FilterPipe {\n    /**\n     * @param {?} value\n     * @param {?} key\n     * @return {?}\n     */\n    static isFoundOnWalking(value, key) {\n        let /** @type {?} */ walker = value;\n        let /** @type {?} */ found = false;\n        do {\n            if (walker.hasOwnProperty(key) || Object.getOwnPropertyDescriptor(walker, key)) {\n                found = true;\n                break;\n            }\n        } while (walker = Object.getPrototypeOf(walker));\n        return found;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    static isNumber(value) {\n        return !isNaN(parseInt(value, 10)) && isFinite(value);\n    }\n    /**\n     * Checks function's value if type is function otherwise same value\n     * @param {?} value\n     * @return {?}\n     */\n    static getValue(value) {\n        return typeof value === 'function' ? value() : value;\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByString(filter) {\n        if (filter) {\n            filter = filter.toLowerCase();\n        }\n        return value => !filter || (value ? ('' + value).toLowerCase().indexOf(filter) !== -1 : false);\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByBoolean(filter) {\n        return value => Boolean(value) === filter;\n    }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByObject(filter) {\n        return value => {\n            for (const /** @type {?} */ key in filter) {\n                if (key === '$or') {\n                    if (!this.filterByOr(filter.$or)(FilterPipe.getValue(value))) {\n                        return false;\n                    }\n                    continue;\n                }\n                if (!value || !FilterPipe.isFoundOnWalking(value, key)) {\n                    return false;\n                }\n                if (!this.isMatching(filter[key], FilterPipe.getValue(value[key]))) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    }\n    /**\n     * @param {?} filter\n     * @param {?} val\n     * @return {?}\n     */\n    isMatching(filter, val) {\n        switch (typeof filter) {\n            case 'boolean':\n                return this.filterByBoolean(filter)(val);\n            case 'string':\n                return this.filterByString(filter)(val);\n            case 'object':\n                return this.filterByObject(filter)(val);\n        }\n        return this.filterDefault(filter)(val);\n    }\n    /**\n     * Filter value by $or\n     * @param {?} filter\n     * @return {?}\n     */\n    filterByOr(filter) {\n        return (value) => {\n            const /** @type {?} */ length = filter.length;\n            const /** @type {?} */ arrayComparison = (i) => value.indexOf(filter[i]) !== -1;\n            const /** @type {?} */ otherComparison = (i) => this.isMatching(filter[i], value);\n            const /** @type {?} */ comparison = Array.isArray(value) ? arrayComparison : otherComparison;\n            for (let /** @type {?} */ i = 0; i < length; i++) {\n                if (comparison(i)) {\n                    return true;\n                }\n            }\n            return false;\n        };\n    }\n    /**\n     * Default filterDefault function\n     * @param {?} filter\n     * @return {?}\n     */\n    filterDefault(filter) {\n        return (value) => filter === undefined || filter == value;\n    }\n    /**\n     * @param {?} array\n     * @param {?} filter\n     * @return {?}\n     */\n    transform(array, filter) {\n        if (!array) {\n            return array;\n        }\n        switch (typeof filter) {\n            case 'boolean':\n                return array.filter(this.filterByBoolean(filter));\n            case 'string':\n                if (FilterPipe.isNumber(filter)) {\n                    return array.filter(this.filterDefault(filter));\n                }\n                return array.filter(this.filterByString(filter));\n            case 'object':\n                return array.filter(this.filterByObject(filter));\n            case 'function':\n                return array.filter(filter);\n        }\n        return array.filter(this.filterDefault(filter));\n    }\n}\nFilterPipe.decorators = [\n    { type: Pipe, args: [{\n                name: 'filterBy',\n                pure: false\n            },] },\n    { type: Injectable },\n];\n/** @nocollapse */\nFilterPipe.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nclass FilterPipeModule {\n}\nFilterPipeModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [FilterPipe],\n                providers: [FilterPipe],\n                exports: [FilterPipe]\n            },] },\n];\n/** @nocollapse */\nFilterPipeModule.ctorParameters = () => [];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FilterPipeModule, FilterPipe };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}